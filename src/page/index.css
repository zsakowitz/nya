@import "tailwindcss";

@utility bg-nya-empty {
  &:where(:not(.nya-display)) {
    @apply bg-(--nya-empty);
  }
}

@utility nya-selected {
  background-color: var(--nya-selection);
}

@custom-variant any-hover {
  @media (any-hover: hover) {
    @slot;
  }
}

@font-face {
  font-family: Symbola;
  src: url("../fonts/Symbola.woff") format("woff");
}

:root,
body {
  touch-action: manipulation;
  --nya-bg: white;
  --nya-text: black;
  --nya-text-prose: theme("colors.slate.700");
  --nya-angle: black;
  --nya-dropdown: theme("colors.slate.400");
  --nya-selection: theme("colors.blue.200");
  --nya-empty: #0003;
  --nya-bg-sidebar: theme("colors.slate.100");
  --nya-sidebar-hover: theme("colors.slate.300");
  --nya-border: theme("colors.slate.200");
  --nya-border-hover: theme("colors.slate.400");
  --nya-slider-zero: theme("colors.slate.400");
  --nya-expr-index: theme("colors.slate.600");
  --nya-expr-focus: theme("colors.blue.400");
  --nya-icon-error: theme("colors.red.500");
  .nya-expr:focus-within {
    --nya-icon-error: theme("colors.white");
  }
  --nya-expr-focus-index: theme("colors.white");
  --nya-pixel-ratio: #0003;
  --nya-latex-error: theme("colors.red.500");
  --nya-range-step: theme("colors.slate.800");
  --nya-range-bounds: theme("colors.slate.500");
  --nya-range-error: theme("colors.red.400");
  --nya-expr-error: theme("colors.red.800");
  --nya-title: theme("colors.slate.600");
  --nya-title-dark: theme("colors.slate.600");
  --nya-sidebar-shadow: #0206170a;
  --nya-paper-axis-number-stroke: white;
  --nya-paper-axis-number-onscreen: black;
  --nya-paper-axis-number-offscreen: #8e8e8e;
  --nya-paper-screen-line: black;
  --nya-sx-border: theme("colors.blue.300");
  --nya-sx-bg: theme("colors.blue.100");
  --nya-sx-text: theme("colors.blue.950");
  --nya-sx-text-prose: theme("colors.blue.900");
  --nya-sx-title: theme("colors.blue.900");
  --nya-yx-border: theme("colors.yellow.300");
  --nya-yx-bg: theme("colors.yellow.100");
  --nya-yx-text: theme("colors.yellow.950");
  --nya-yx-text-prose: theme("colors.yellow.900");
  --nya-yx-title: theme("colors.yellow.900");
  color-scheme: light;

  @apply bg-(--nya-bg-sidebar) text-(--nya-text);
}

@media (prefers-color-scheme: dark) {
  :root,
  body {
    --nya-bg: theme("colors.slate.950");
    --nya-text: theme("colors.slate.300");
    --nya-text-prose: theme("colors.slate.300");
    --nya-angle: theme("colors.slate.500");
    --nya-dropdown: theme("colors.slate.500");
    --nya-selection: theme("colors.blue.900");
    --nya-empty: theme("colors.slate.800");
    --nya-bg-sidebar: theme("colors.slate.900");
    --nya-sidebar-hover: theme("colors.slate.800");
    --nya-border: theme("colors.slate.800");
    --nya-border-hover: theme("colors.slate.700");
    --nya-slider-zero: theme("colors.slate.400");
    --nya-expr-index: theme("colors.slate.400");
    --nya-expr-focus: theme("colors.blue.800");
    --nya-icon-error: theme("colors.red.500");
    .nya-expr:focus-within {
      --nya-icon-error: theme("colors.blue.100");
    }
    --nya-expr-focus-index: theme("colors.white");
    --nya-pixel-ratio: #64748b80;
    --nya-latex-error: theme("colors.red.500");
    --nya-range-step: theme("colors.slate.300");
    --nya-range-bounds: theme("colors.slate.500");
    --nya-range-error: theme("colors.red.400");
    --nya-expr-error: #f87171d0;
    --nya-title: theme("colors.slate.400");
    --nya-title-dark: theme("colors.slate.300");
    --nya-sidebar-shadow: #e2e8f00a;
    --nya-paper-axis-number-stroke: black;
    --nya-paper-axis-number-onscreen: white;
    --nya-paper-axis-number-offscreen: #8e8e8e;
    --nya-paper-screen-line: theme("colors.slate.600");
    --nya-sx-border: theme("colors.blue.800");
    --nya-sx-bg: theme("colors.blue.950");
    --nya-sx-text: theme("colors.blue.300");
    --nya-sx-text-prose: theme("colors.blue.500");
    --nya-sx-title: theme("colors.blue.400");
    --nya-yx-border: theme("colors.yellow.800");
    --nya-yx-bg: theme("colors.yellow.950");
    --nya-yx-text: theme("colors.yellow.300");
    --nya-yx-text-prose: theme("colors.yellow.500");
    --nya-yx-title: theme("colors.yellow.400");
    color-scheme: dark;
  }
}

:root {
  --nya-kbd-grid-height: 0px;
}

:root,
body {
  --nya-kbd-bg: theme("colors.slate.200");
  --nya-kbd-key-bg: theme("colors.white");
  --nya-kbd-key-hover-bg: theme("colors.slate.100");
  --nya-kbd-key-text: theme("colors.slate.900");
  --nya-kbd-key-active-bg: theme("colors.slate.600");
  --nya-kbd-key-active-text: theme("colors.white");
  --nya-kbd-toggle-icon: theme("colors.slate.500");
  --nya-kbd-height: calc(var(--nya-kbd-grid-height) + 1rem);
  --nya-kbd-sheet-offset: 0px;
}

.nya-kbd-any-open,
.nya-kbd-any-open body {
  --nya-kbd-sheet-offset: var(--nya-kbd-height);
}

@media (prefers-color-scheme: dark) {
  :root,
  body {
    --nya-kbd-bg: theme("colors.slate.900");
    --nya-kbd-key-bg: theme("colors.slate.800");
    --nya-kbd-key-hover-bg: theme("colors.slate.700");
    --nya-kbd-key-text: theme("colors.white");
    --nya-kbd-key-active-bg: theme("colors.slate.500");
    --nya-kbd-key-active-text: theme("colors.slate.900");
    --nya-kbd-toggle-icon: theme("colors.slate.500");
  }
}

.nya-kbd {
  @apply any-hover:hover:bg-(--nya-kbd-key-hover-bg) bg-(--nya-kbd-key-bg) fill-(--nya-kbd-key-text) text-(--nya-kbd-key-text) active:bg-(--nya-kbd-key-hover-bg);
}

.nya-kbd-active {
  @apply any-hover:hover:bg-(--nya-kbd-key-active-bg) bg-(--nya-kbd-key-active-bg) fill-(--nya-kbd-key-active-text) text-(--nya-kbd-key-active-text) active:bg-(--nya-kbd-key-active-bg);
}

.nya-kbd-locked .nya-kbd-lock {
  @apply block;
}

.nya-sx {
  --nya-border: var(--nya-sx-border);
  --nya-bg: var(--nya-sx-bg);
  --nya-text: var(--nya-sx-text);
  --nya-text-prose: var(--nya-sx-text-prose);
  --nya-title: var(--nya-sx-title);
}

.nya-yx {
  --nya-border: var(--nya-yx-border);
  --nya-bg: var(--nya-yx-bg);
  --nya-text: var(--nya-yx-text);
  --nya-text-prose: var(--nya-yx-text-prose);
  --nya-title: var(--nya-yx-title);
}

.nya-cmd-word-r {
  @apply pr-[.2em];

  &:last-child,
  &:has(+ :where(.nya-cursor):last-child) {
    @apply pr-0;
  }

  &:where(:has(+ .nya-cursor + .nya-cmd-colon)),
  &:where(:has(+ .nya-cmd-colon)) {
    @apply pr-0;
  }
}

.nya-cmd-word-l {
  @apply pl-[.2em];

  .nya-cmd-colon + :where(&),
  .nya-cmd-colon + :where(.nya-cursor) + :where(&),
  .nya-cmd-supsub + :where(&),
  .nya-cmd-supsub + :where(.nya-cursor) + :where(&) {
    @apply pl-[.1em];
  }

  &:first-child,
  :where(.nya-cursor):first-child + & {
    @apply pl-0;
  }
}

.nya-cmd-colon:has(+ :where(.nya-cmd-word-l)),
.nya-cmd-colon:has(+ :where(.nya-cursor) + :where(.nya-cmd-word-l)),
.nya-cmd-colon:has(+ :where(.nya-cmd-dot-l)),
.nya-cmd-colon:has(+ :where(.nya-cursor) + :where(.nya-cmd-dot-l)) {
  @apply pr-[.1em];
}

.nya-cmd-op,
.nya-cmd-word-r:not(.nya-cmd-word-var):where(:not(.nya-cmd-word-prop)) {
  & + .nya-cmd-pm > *,
  & + :where(.nya-cursor) + .nya-cmd-pm > * {
    @apply pr-0;
  }
}

.nya-cmd-var-prop {
  @apply pr-[.2em];

  &:last-child,
  &:has(+ :where(.nya-cursor):last-child) {
    @apply pr-0;
  }

  &:where(:has(+ .nya-cursor + .nya-cmd-colon)),
  &:where(:has(+ .nya-cmd-colon)) {
    @apply pr-0;
  }
}

.nya-cmd-var-prop:has(+ .nya-cmd-supsub),
.nya-cmd-var-prop:has(+ .nya-cursor + .nya-cmd-supsub) {
  @apply pr-0;
}

.nya-cmd-var-prop + .nya-cmd-supsub,
.nya-cmd-var-prop + .nya-cursor + .nya-cmd-supsub {
  @apply pr-[.2em];
}

.nya-cmd-op,
.nya-cmd-word-l {
  .nya-cmd-var-prop:has(+ &),
  .nya-cmd-var-prop:has(+ .nya-cursor + &),
  .nya-cmd-var-prop + .nya-cmd-supsub:has(+ &),
  .nya-cmd-var-prop + .nya-cmd-supsub:has(+ .nya-cursor + &),
  .nya-cmd-var-prop + .nya-cursor + .nya-cmd-supsub:has(+ &) {
    @apply pr-0;
  }
}

:is(.nya-cmd-op, .nya-cmd-word-r) + .nya-cmd-pm > *,
:is(.nya-cmd-op, .nya-cmd-word-r) + :where(.nya-cursor) + .nya-cmd-pm > *,
.nya-cmd-op:first-child > *,
:where(.nya-cursor):first-child + .nya-cmd-op > * {
  @apply pl-0;
}

:is(.nya-cmd-word-r) + .nya-cmd-supsub + .nya-cmd-pm > *,
:is(.nya-cmd-word-r) + :where(.nya-cursor) + .nya-cmd-supsub + .nya-cmd-pm > *,
:is(.nya-cmd-word-r) + .nya-cmd-supsub + :where(.nya-cursor) + .nya-cmd-pm > * {
  @apply px-0;
}

.nya-cmd-op + .nya-cmd-word-l,
.nya-cmd-op + :where(.nya-cursor) + .nya-cmd-word-l {
  @apply pl-0;
}

.nya-cmd-word-r:not(.nya-cmd-word-infix):has(
    + .nya-cmd-brack,
    + :where(.nya-cursor) + .nya-cmd-brack
  ) {
  @apply pr-[.1em];
}

.nya-cmd-word-r.nya-cmd-word-prop:has(
    + .nya-cmd-brack,
    + :where(.nya-cursor) + .nya-cmd-brack
  ) {
  @apply pr-0;
}

.nya-cmd-word-r:not(.nya-cmd-word-infix):has(
    + .nya-cmd-paren,
    + :where(.nya-cursor) + .nya-cmd-paren
  ) {
  @apply pr-0;
}

.nya-cmd-brack + .nya-cmd-word-l.nya-cmd-word-var,
.nya-cmd-brack + :where(.nya-cursor) + .nya-cmd-word-l.nya-cmd-word-var {
  @apply pl-0;
}

.nya-cmd-word-r:has(
    + :where(.nya-cursor) + .nya-cmd-word-l,
    + .nya-cmd-word-l
  ) {
  @apply pr-[.1em];
}

.nya-cmd-word-r + .nya-cmd-word-l,
.nya-cmd-word-r + :where(.nya-cursor) + .nya-cmd-word-l {
  @apply pl-[.1em];
}

.nya-cmd-word-r:not(.nya-cmd-word-infix):has(
    + .nya-cmd-supsub,
    + :where(.nya-cursor) + .nya-cmd-supsub
  ) {
  @apply pr-0;
}

.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cursor + .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + :where(.nya-cursor)
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + .nya-cmd-dot
  + .nya-cmd-var
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + :where(.nya-cursor)
  + .nya-cmd-dot
  + .nya-cmd-var
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + .nya-cmd-dot
  + :where(.nya-cursor)
  + .nya-cmd-var
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + .nya-cmd-dot
  + .nya-cmd-var
  + :where(.nya-cursor)
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cmd-word-l))),
.nya-cmd-word-r:not(.nya-cmd-word-infix)
  + .nya-cmd-dot
  + .nya-cmd-var
  + .nya-cmd-supsub:where(:not(:has(+ .nya-cursor + .nya-cmd-word-l))) {
  @apply pr-[.2em];

  &:last-child,
  &:has(+ :where(.nya-cursor):last-child),
  &:has(+ .nya-cmd-brack),
  &:has(+ :where(.nya-cursor) + .nya-cmd-brack) {
    @apply pr-0;
  }

  &:is(.nya-cmd-word-r + .nya-cmd-supsub):has(
      + .nya-cmd-brack:not(.nya-cmd-paren)
    ),
  &:is(.nya-cmd-word-r + .nya-cursor + .nya-cmd-supsub):has(
      + .nya-cmd-brack:not(.nya-cmd-paren)
    ),
  &:is(.nya-cmd-word-r + .nya-cmd-supsub):has(
      + .nya-cursor + .nya-cmd-brack:not(.nya-cmd-paren)
    ) {
    @apply pr-[.1em];
  }
}

.nya-cmd-dot-l {
  @apply pl-[.14em];
}

.nya-cmd-colon + :where(.nya-cmd-dot-l),
.nya-cmd-colon + :where(.nya-cursor) + :where(.nya-cmd-dot-l) {
  @apply pl-[.07em];
}

.nya-cmd-dot-r {
  @apply pr-[.14em];
}

.nya-cmd-dot-r:has(+ .nya-cmd-comma, + :where(.nya-cursor) + .nya-cmd-comma) {
  @apply pr-0;
}

.nya-cmd-word-r:has(+ .nya-cmd-dot-l, + :where(.nya-cursor) + .nya-cmd-dot-l) {
  @apply pr-0;
}

.nya-cmd-word-r:has(
    + .nya-cmd-dot:last-child,
    + .nya-cmd-dot + :where(.nya-cursor):last-child,
    + :where(.nya-cursor) + .nya-cmd-dot:last-child
  ) {
  @apply pr-0;
}

.nya-cmd-dot-r + .nya-cmd-word-l,
.nya-cmd-dot-r + :where(.nya-cursor) + .nya-cmd-word-l {
  @apply pl-0;
}

.nya-cmd-dot-prop + .nya-cmd-word-l,
.nya-cmd-dot-prop + :where(.nya-cursor) + .nya-cmd-word-l {
  @apply pl-0;
}

.nya-cmd-word-r:has(
    + .nya-cmd-dot-prop,
    + :where(.nya-cursor) + .nya-cmd-dot-prop,
    + .nya-cmd-op:not(.nya-cmd-pm),
    + :where(.nya-cursor) + .nya-cmd-op:not(.nya-cmd-pm)
  ) {
  @apply pr-0;
}

.nya-cmd-pm:first-child > *,
:where(.nya-cursor):first-child + .nya-cmd-pm > * {
  @apply pr-0;
}

.nya-cmd-op:not(.nya-cmd-pm) + .nya-cmd-op:not(.nya-cmd-pm) > *,
.nya-cmd-op:not(.nya-cmd-pm)
  + :where(.nya-cursor)
  + .nya-cmd-op:not(.nya-cmd-pm)
  > * {
  @apply pl-[.1em];
}

.nya-cmd-op:not(.nya-cmd-pm):has(+ .nya-cmd-op:not(.nya-cmd-pm)) > *,
.nya-cmd-op:not(.nya-cmd-pm):has(
    + :where(.nya-cursor) + .nya-cmd-op:not(.nya-cmd-pm)
  )
  > * {
  @apply pr-[.1em];
}

.nya-prefix {
  @apply opacity-50;
}

.nya-cmd-not > * {
  @apply pr-0;
}

.nya-cmd-dot + .nya-cmd-word-infix,
.nya-cmd-dot + :where(.nya-cursor) + .nya-cmd-word-infix {
  @apply pl-[.2em];
}

.nya-cmd-comma + .nya-cmd-comma,
.nya-cmd-comma + .nya-cursor + .nya-cmd-comma {
  @apply pl-[1ch];
}

.nya-cmd-word-r:has(+ .nya-cmd-frac),
.nya-cmd-word-r:has(+ .nya-cursor + .nya-cmd-frac) {
  @apply pr-[.1em];
}

.nya-cmd-supsub:has(+ .nya-cmd-word-l),
.nya-cmd-supsub:has(+ .nya-cursor + :where(.nya-cmd-word-l)) {
  @apply pr-[.1em];
}

.nya-range-bound {
  @apply border-(--nya-border);
}

:where(
    .nya-expr:not(:focus-within),
    .nya-expr:has(.nya-range-scrubber:focus-within)
  )
  :where(.nya-range:not(.nya-range-error)) {
  & {
    @apply -mt-3 items-center px-3 text-[.6rem] text-(--nya-range-bounds) [:where(&)]:flex;
  }

  .nya-range-bound {
    @apply pb-2 font-sans;
  }

  .nya-range-bounds {
    @apply sr-only block;
  }
}

:where(
  .nya-expr:focus-within:not(:has(.nya-range-scrubber:focus-within)) .nya-range,
  .nya-range-error
) {
  & {
    @apply -mt-2 px-4 pb-2 text-[1.265em] leading-none;
  }

  .nya-range-bound {
    @apply min-h-[calc(1.5rem+1px)] max-w-24 min-w-12 overflow-x-auto border-b p-1 pr-2 align-middle text-[1rem] focus:-mb-px focus:border-b-2 focus:border-b-(--nya-expr-focus) focus:outline-hidden [&::-webkit-scrollbar]:hidden;
  }

  .nya-range-scrubber {
    @apply sr-only;
  }
}

:where(.nya-range-error) .nya-range-scrubber {
  @apply hidden;
}

.mq-frozen:before {
  @apply absolute top-full left-1/2 inline-block h-[calc(0.75em+4px)] -translate-x-1/2 -translate-y-1/2 rounded-sm bg-blue-500 px-[.2em] text-[50%] text-blue-50 content-(--label);
}

.nya-expr-bar {
  :where(:focus-within) > & {
    @apply border-(--nya-expr-focus) bg-(--nya-expr-focus) text-(--nya-expr-focus-index);
  }

  @media (any-hover: hover) {
    :where(:active):not(:has(.nya-not-expr-focus-target:active)) > & {
      @apply border-(--nya-expr-focus) bg-(--nya-expr-focus) text-(--nya-expr-focus-index);
    }
  }
}

.nya-ast-group {
  @apply text-blue-700 [--nya-ast-bg:var(--color-blue-200)] [--nya-text:var(--color-blue-800)] dark:text-blue-300 dark:[--nya-ast-bg:var(--color-blue-800)] dark:[--nya-text:var(--color-blue-400)];

  .nya-ast-group {
    @apply text-pink-700 [--nya-ast-bg:var(--color-pink-200)] [--nya-text:var(--color-pink-800)] dark:text-pink-300 dark:[--nya-ast-bg:var(--color-pink-800)] dark:[--nya-text:var(--color-pink-400)];

    .nya-ast-group {
      @apply text-green-700 [--nya-ast-bg:var(--color-green-200)] [--nya-text:var(--color-green-800)] dark:text-green-300 dark:[--nya-ast-bg:var(--color-green-800)] dark:[--nya-text:var(--color-green-400)];

      .nya-ast-group {
        @apply text-purple-700 [--nya-ast-bg:var(--color-purple-200)] [--nya-text:var(--color-purple-800)] dark:text-purple-300 dark:[--nya-ast-bg:var(--color-purple-800)] dark:[--nya-text:var(--color-purple-400)];

        .nya-ast-group {
          @apply text-blue-700 [--nya-ast-bg:var(--color-blue-200)] [--nya-text:var(--color-blue-800)] dark:text-blue-300 dark:[--nya-ast-bg:var(--color-blue-800)] dark:[--nya-text:var(--color-blue-400)];

          .nya-ast-group {
            @apply text-pink-700 [--nya-ast-bg:var(--color-pink-200)] [--nya-text:var(--color-pink-800)] dark:text-pink-300 dark:[--nya-ast-bg:var(--color-pink-800)] dark:[--nya-text:var(--color-pink-400)];

            .nya-ast-group {
              @apply text-green-700 [--nya-ast-bg:var(--color-green-200)] [--nya-text:var(--color-green-800)] dark:text-green-300 dark:[--nya-ast-bg:var(--color-green-800)] dark:[--nya-text:var(--color-green-400)];

              .nya-ast-group {
                @apply text-purple-700 [--nya-ast-bg:var(--color-purple-200)] [--nya-text:var(--color-purple-800)] dark:text-purple-300 dark:[--nya-ast-bg:var(--color-purple-800)] dark:[--nya-text:var(--color-purple-400)];

                .nya-ast-group {
                  @apply text-blue-700 [--nya-ast-bg:var(--color-blue-200)] [--nya-text:var(--color-blue-800)] dark:text-blue-300 dark:[--nya-ast-bg:var(--color-blue-800)] dark:[--nya-text:var(--color-blue-400)];

                  .nya-ast-group {
                    @apply text-pink-700 [--nya-ast-bg:var(--color-pink-200)] [--nya-text:var(--color-pink-800)] dark:text-pink-300 dark:[--nya-ast-bg:var(--color-pink-800)] dark:[--nya-text:var(--color-pink-400)];

                    .nya-ast-group {
                      @apply text-green-700 [--nya-ast-bg:var(--color-green-200)] [--nya-text:var(--color-green-800)] dark:text-green-300 dark:[--nya-ast-bg:var(--color-green-800)] dark:[--nya-text:var(--color-green-400)];

                      .nya-ast-group {
                        @apply text-purple-700 [--nya-ast-bg:var(--color-purple-200)] [--nya-text:var(--color-purple-800)] dark:text-purple-300 dark:[--nya-ast-bg:var(--color-purple-800)] dark:[--nya-text:var(--color-purple-400)];

                        .nya-ast-group {
                          @apply text-blue-700 [--nya-ast-bg:var(--color-blue-200)] [--nya-text:var(--color-blue-800)] dark:text-blue-300 dark:[--nya-ast-bg:var(--color-blue-800)] dark:[--nya-text:var(--color-blue-400)];

                          .nya-ast-group {
                            @apply text-pink-700 [--nya-ast-bg:var(--color-pink-200)] [--nya-text:var(--color-pink-800)] dark:text-pink-300 dark:[--nya-ast-bg:var(--color-pink-800)] dark:[--nya-text:var(--color-pink-400)];

                            .nya-ast-group {
                              @apply text-green-700 [--nya-ast-bg:var(--color-green-200)] [--nya-text:var(--color-green-800)] dark:text-green-300 dark:[--nya-ast-bg:var(--color-green-800)] dark:[--nya-text:var(--color-green-400)];

                              .nya-ast-group {
                                @apply text-purple-700 [--nya-ast-bg:var(--color-purple-200)] [--nya-text:var(--color-purple-800)] dark:text-purple-300 dark:[--nya-ast-bg:var(--color-purple-800)] dark:[--nya-text:var(--color-purple-400)];
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
